---
interface Product {
  title: string;
  description: string;
  type: 'CHEATSHEET' | 'E-BOOK';
  price: number;
  originalPrice?: number;
  thumbnail?: string;
  link: string;
}

const products: Product[] = [
  {
    title: 'SQL Cheatsheet',
    description: 'Kumpulan perintah SQL yang Data Analis wajib tau',
    type: 'CHEATSHEET',
    price: 0,
    originalPrice: 20000,
    link: '#'
  },
  {
    title: '50 SQL Problem & Solusi untuk Analisa Data',
    description: 'Kuasai SQL lewat 50 problem dan solusi praktis dalam analisa data.',
    type: 'E-BOOK',
    price: 97000,
    link: '#'
  }
];

function getRandomColor() {
  const colors = ['bg-indigo-500', 'bg-emerald-500', 'bg-violet-500', 'bg-rose-500', 'bg-amber-500'];
  return colors[Math.floor(Math.random() * colors.length)];
}

function formatPrice(price: number) {
  return price === 0 ? 'GRATIS' : `IDR ${price.toLocaleString('id-ID')}`;
}
---

<div class="my-10">
  <div class="flex items-center gap-2 mb-4">
    <h2 class="text-xl font-bold">Produk Unggulan</h2>
    <span class="inline-flex items-center gap-1.5 py-1.5 px-3 rounded-full text-xs font-medium bg-blue-100 text-blue-800">HOT</span>
  </div>
  <p class="text-gray-600 dark:text-gray-400 text-sm mb-6">Paling banyak di download dan pelajari</p>

  <div class="grid sm:grid-cols-2 gap-4">
    {products.map((product) => (
      <div class="group flex flex-col bg-white border-2 border-blue-600 shadow-sm rounded-lg hover:shadow-md transition dark:bg-slate-900 dark:border-blue-500">
        <div class="relative">
          {product.thumbnail ? (
            <img src={product.thumbnail} alt={product.title} class="w-full h-32 object-cover rounded-t-lg" />
          ) : (
            <div class={`${getRandomColor()} w-full h-32 rounded-t-lg flex items-center justify-center bg-opacity-90`}>
              <span class="text-lg font-bold text-white">{product.title}</span>
            </div>
          )}
          <div class="absolute top-2 left-2">
            <span class="bg-blue-600 backdrop-blur rounded px-2 py-1 text-xs font-medium text-white">{product.type}</span>
          </div>
        </div>
        <div class="p-3">
          <div class="mt-1">
            <h3 class="text-base font-bold text-gray-800 dark:text-white">
              {product.title}
            </h3>
            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
              {product.description}
            </p>
            <div class="mt-3 flex items-center gap-2">
              {product.originalPrice && (
                <span class="text-xs text-gray-500 line-through dark:text-gray-400">
                  {formatPrice(product.originalPrice)}
                </span>
              )}
              <span class={`inline-flex items-center gap-1.5 py-1 px-2 rounded-full text-xs font-semibold ${product.price === 0 ? 'bg-blue-100 text-blue-800' : 'bg-blue-100 text-blue-800'}`}>
                {formatPrice(product.price)}
              </span>
            </div>
          </div>
          <a 
            class={`mt-3 py-2 px-3 inline-flex justify-center items-center gap-2 rounded-md border font-medium ${product.price === 0 ? 'bg-blue-600 text-white hover:bg-blue-700' : 'bg-blue-600 text-white hover:bg-blue-700'} shadow-sm align-middle focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-blue-600 transition-all text-xs dark:bg-blue-600 dark:hover:bg-blue-700 dark:border-blue-500 dark:text-white dark:hover:text-white dark:focus:ring-offset-gray-800`}
            href={product.link}
          >
            {product.price === 0 ? 'DOWNLOAD' : 'CHECKOUT'}
          </a>
        </div>
      </div>
    ))}
  </div>
</div>