---
import '../styles/preline.min.css';

interface Props {
  title?: string;
  description?: string;
}

const {
  title = 'Jean Cruz | Diseñador de operaciones basadas en datos',
  description = 'Portafolio de Workforce Intelligence, automatización y analítica CX liderado por Jean Cruz.'
} = Astro.props;

const navLinks = [
  { href: '#inicio', label: 'Inicio' },
  { href: '#presentacion', label: 'Presentación' },
  { href: '#dashboards', label: 'Tableros' },
  { href: '#casos', label: 'Casos de éxito' },
  { href: '#servicios', label: 'Servicios' },
  { href: '#cv', label: 'CV' },
  { href: '#contacto', label: 'Contacto' }
];

const socialCardStyle = `
  <svg width="1200" height="630" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg">
    <defs>
      <linearGradient id="bg" x1="0%" y1="0%" x2="100%" y2="100%">
        <stop offset="0%" style="stop-color:#e0f2fe;stop-opacity:1" />
        <stop offset="100%" style="stop-color:#ede9fe;stop-opacity:1" />
      </linearGradient>
      <filter id="blur">
        <feGaussianBlur stdDeviation="90" />
      </filter>
    </defs>
    <rect width="100%" height="100%" fill="url(#bg)" />
    <circle cx="220" cy="120" r="200" fill="rgba(59,130,246,0.28)" filter="url(#blur)" />
    <circle cx="980" cy="520" r="240" fill="rgba(134,239,172,0.3)" filter="url(#blur)" />
    <text x="50%" y="52%" font-family="'Inter', 'Segoe UI', sans-serif" font-size="60" text-anchor="middle" fill="#0f172a">${title}</text>
  </svg>
`;

const socialCardUrl = `data:image/svg+xml,${encodeURIComponent(socialCardStyle)}`;
---
<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={socialCardUrl} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://jeancruzc.github.io" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={socialCardUrl} />

    <style>
      :root {
        color-scheme: light;
        font-family: 'Inter', 'Segoe UI', system-ui, sans-serif;
        background-color: #f4f6fb;
      }

      html {
        scroll-behavior: smooth;
        scroll-padding-top: 7rem;
      }

      body {
        min-height: 100vh;
        margin: 0;
        color: #0f172a;
        background:
          radial-gradient(circle at 12% 8%, rgba(96, 165, 250, 0.22), transparent 58%),
          radial-gradient(circle at 88% 12%, rgba(196, 181, 253, 0.24), transparent 52%),
          radial-gradient(circle at 10% 82%, rgba(134, 239, 172, 0.18), transparent 60%),
          #f4f6fb;
      }

      body::before {
        content: '';
        position: fixed;
        inset: 0;
        pointer-events: none;
        background:
          radial-gradient(circle at 25% 35%, rgba(148, 163, 184, 0.16), transparent 60%),
          radial-gradient(circle at 80% 75%, rgba(191, 219, 254, 0.3), transparent 65%);
        opacity: 0.75;
        z-index: -1;
      }

      a {
        text-decoration: none;
        color: inherit;
      }

      .glass {
        background: rgba(255, 255, 255, 0.78);
        border: 1px solid rgba(148, 163, 184, 0.28);
        backdrop-filter: blur(18px);
        -webkit-backdrop-filter: blur(18px);
        box-shadow: 0 22px 55px rgba(15, 23, 42, 0.08);
      }
    </style>
  </head>
  <body class="relative">
    <header class="pointer-events-none">
      <nav class="glass pointer-events-auto sticky top-4 z-40 mx-auto flex w-[min(100%-2.5rem,72rem)] items-center justify-between gap-4 rounded-full px-5 py-3 text-sm font-medium text-slate-600">
        <a href="#inicio" class="flex items-center gap-2 text-slate-900">
          <span class="size-2 rounded-full bg-indigo-500 shadow-[0_0_0_4px_rgba(99,102,241,0.18)]"></span>
          Jean Cruz
        </a>
        <div class="hidden items-center gap-1.5 lg:flex">
          {navLinks.map((item) => (
            <a
              href={item.href}
              class="group inline-flex items-center gap-1.5 rounded-full px-3 py-2 transition hover:bg-slate-900/90 hover:text-white"
              data-nav-link
            >
              <span class="size-1.5 rounded-full bg-slate-300 transition group-hover:bg-white"></span>
              {item.label}
            </a>
          ))}
        </div>
        <a
          href="#contacto"
          class="hidden items-center gap-2 rounded-full bg-slate-900 px-4 py-2 text-white transition hover:-translate-y-0.5 hover:bg-indigo-600 lg:inline-flex"
        >
          Agenda una reunión
          <span aria-hidden="true">↗</span>
        </a>
      </nav>
    </header>
    <main class="pt-32 pb-24">
      <slot />
    </main>
    <footer class="mx-auto w-[min(100%-2.5rem,70rem)] pb-16 text-sm text-slate-500">
      <div class="rounded-3xl bg-white/70 p-6 shadow-[0_35px_80px_-40px_rgba(15,23,42,0.45)] ring-1 ring-white/70">
        <div class="flex flex-col gap-3 text-center md:flex-row md:items-center md:justify-between">
          <p class="font-medium text-slate-700">© {new Date().getFullYear()} Jean Cruz · Workforce Intelligence & CX Analytics</p>
          <div class="flex flex-wrap items-center justify-center gap-3 text-xs uppercase tracking-[0.3em] text-slate-400">
            <span>Looker Studio</span>
            <span class="size-1 rounded-full bg-slate-300"></span>
            <span>Power BI</span>
            <span class="size-1 rounded-full bg-slate-300"></span>
            <span>Streamlit</span>
            <span class="size-1 rounded-full bg-slate-300"></span>
            <span>Excel</span>
          </div>
        </div>
      </div>
    </footer>
    <script>
      const navLinks = document.querySelectorAll('[data-nav-link]');
      const sections = Array.from(navLinks)
        .map((link) => document.querySelector(link.getAttribute('href')))
        .filter(Boolean);

      const setActiveLink = (hash) => {
        navLinks.forEach((link) => {
          const isActive = link.getAttribute('href') === hash;
          link.classList.toggle('bg-slate-900/90', isActive);
          link.classList.toggle('text-white', isActive);
          link.querySelector('span')?.classList.toggle('bg-white', isActive);
        });
      };

      const observer = new IntersectionObserver(
        (entries) => {
          const visible = entries
            .filter((entry) => entry.isIntersecting)
            .sort((a, b) => b.intersectionRatio - a.intersectionRatio)[0];
          if (visible) {
            setActiveLink(`#${visible.target.id}`);
          }
        },
        { threshold: [0.4] }
      );

      sections.forEach((section) => observer.observe(section));

      document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener('click', (event) => {
          const hash = anchor.getAttribute('href');
          const target = document.querySelector(hash);
          if (target) {
            event.preventDefault();
            window.history.replaceState(null, '', hash);
            target.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        });
      });
    </script>
  </body>
</html>
